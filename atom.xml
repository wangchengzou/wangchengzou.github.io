<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>~~博客园~~</title>
  <subtitle>千帆渡</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="www.wangchengzou.cn/"/>
  <updated>2017-07-23T03:52:11.433Z</updated>
  <id>www.wangchengzou.cn/</id>
  
  <author>
    <name>汪成邹</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>link和@import有什么区别</title>
    <link href="www.wangchengzou.cn/2017/07/23/link%E5%92%8C-import%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB/"/>
    <id>www.wangchengzou.cn/2017/07/23/link和-import有什么区别/</id>
    <published>2017-07-23T03:50:15.000Z</published>
    <updated>2017-07-23T03:52:11.433Z</updated>
    
    <content type="html"><![CDATA[<p>（1）link属于XHTML标签，除了加载CSS外，还能用于定义RSS, 定义rel连接属性等作用；而@import是CSS提供的，只能用于加载CSS; （2）页面被加载的时，link会同时被加载，而@import引用的CSS会等到页面被加载完再加载; （3）import是CSS2.1 提出的，只在IE5以上才能被识别，而link是XHTML标签，无兼容问题;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;（1）link属于XHTML标签，除了加载CSS外，还能用于定义RSS, 定义rel连接属性等作用；而@import是CSS提供的，只能用于加载CSS; （2）页面被加载的时，link会同时被加载，而@import引用的CSS会等到页面被加载完再加载; （3）import是
    
    </summary>
    
      <category term="面试题目" scheme="www.wangchengzou.cn/categories/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="html" scheme="www.wangchengzou.cn/tags/html/"/>
    
      <category term="css" scheme="www.wangchengzou.cn/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>行内元素有哪些？块级元素有哪些？ 空(void)元素有那些？</title>
    <link href="www.wangchengzou.cn/2017/07/23/%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F-%E7%A9%BA-void-%E5%85%83%E7%B4%A0%E6%9C%89%E9%82%A3%E4%BA%9B%EF%BC%9F/"/>
    <id>www.wangchengzou.cn/2017/07/23/行内元素有哪些？块级元素有哪些？-空-void-元素有那些？/</id>
    <published>2017-07-23T02:47:53.000Z</published>
    <updated>2017-07-23T03:49:03.701Z</updated>
    
    <content type="html"><![CDATA[<p>行内元素有：a b span img input select strong（强调的语气）<br>块级元素有：div ul ol li dl dt dd h1 h2 h3 h4…p<br>常见的空元素：<br> <hr> <img> <input> <link> <meta></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;行内元素有：a b span img input select strong（强调的语气）&lt;br&gt;块级元素有：div ul ol li dl dt dd h1 h2 h3 h4…p&lt;br&gt;常见的空元素：&lt;br&gt; &lt;hr&gt; &lt;img&gt; &lt;input&gt; &lt;link&gt; &lt;meta
    
    </summary>
    
      <category term="面试题目" scheme="www.wangchengzou.cn/categories/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="html" scheme="www.wangchengzou.cn/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>title与h1的区别、b与strong的区别、i与em的区别</title>
    <link href="www.wangchengzou.cn/2017/07/22/title%E4%B8%8Eh1%E7%9A%84%E5%8C%BA%E5%88%AB%E3%80%81b%E4%B8%8Estrong%E7%9A%84%E5%8C%BA%E5%88%AB%E3%80%81i%E4%B8%8Eem%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>www.wangchengzou.cn/2017/07/22/title与h1的区别、b与strong的区别、i与em的区别/</id>
    <published>2017-07-22T15:48:26.000Z</published>
    <updated>2017-07-23T07:49:57.033Z</updated>
    
    <content type="html"><![CDATA[<p>title属性没有明确意义只表示是个标题，H1则表示层次明确的标题，对页面信息的抓取也有很大的影响；<br>strong是标明重点内容，有语气加强的含义，使用阅读设备阅读网络时：<strong>会重读，而<b>是展示强调内容。<br>i内容展示为斜体，em表示强调的文本；<br>Physical Style Elements – 自然样式标签 b, i, u, s, preSemantic Style Elements – 语义样式标签<br>strong, em, ins, del, code应该准确使用语义样式标签, 但不能滥用, 如果不能确定时首选使用自然样式标签。</b></strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;title属性没有明确意义只表示是个标题，H1则表示层次明确的标题，对页面信息的抓取也有很大的影响；&lt;br&gt;strong是标明重点内容，有语气加强的含义，使用阅读设备阅读网络时：&lt;strong&gt;会重读，而&lt;b&gt;是展示强调内容。&lt;br&gt;i内容展示为斜体，em表示强调的文本；&lt;
    
    </summary>
    
      <category term="面试题目" scheme="www.wangchengzou.cn/categories/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="html" scheme="www.wangchengzou.cn/tags/html/"/>
    
      <category term="H5" scheme="www.wangchengzou.cn/tags/H5/"/>
    
  </entry>
  
  <entry>
    <title>CSS优先级算法如何计算</title>
    <link href="www.wangchengzou.cn/2017/07/22/CSS%E4%BC%98%E5%85%88%E7%BA%A7%E7%AE%97%E6%B3%95%E5%A6%82%E4%BD%95%E8%AE%A1%E7%AE%97/"/>
    <id>www.wangchengzou.cn/2017/07/22/CSS优先级算法如何计算/</id>
    <published>2017-07-22T15:48:26.000Z</published>
    <updated>2017-07-23T07:53:48.776Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>优先级就近原则，同权重情况下样式定义最近者为准;</li>
<li>载入样式以最后载入的定位为准;<br>优先级为:    !important &gt;  id &gt; class &gt; tag<br>important 比 内联优先级高</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;优先级就近原则，同权重情况下样式定义最近者为准;&lt;/li&gt;
&lt;li&gt;载入样式以最后载入的定位为准;&lt;br&gt;优先级为:    !important &amp;gt;  id &amp;gt; class &amp;gt; tag&lt;br&gt;important 比 内联优先级高&lt;/li&gt;
&lt;/
    
    </summary>
    
      <category term="面试题目" scheme="www.wangchengzou.cn/categories/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="html" scheme="www.wangchengzou.cn/tags/html/"/>
    
      <category term="css" scheme="www.wangchengzou.cn/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>CSS3新增伪类有那些</title>
    <link href="www.wangchengzou.cn/2017/07/22/CSS3%E6%96%B0%E5%A2%9E%E4%BC%AA%E7%B1%BB%E6%9C%89%E9%82%A3%E4%BA%9B/"/>
    <id>www.wangchengzou.cn/2017/07/22/CSS3新增伪类有那些/</id>
    <published>2017-07-22T15:48:26.000Z</published>
    <updated>2017-07-23T07:55:42.524Z</updated>
    
    <content type="html"><![CDATA[<p>举例：<br>p:first-of-type 选择属于其父元素的首个 </p><p> 元素的每个 </p><p> 元素。<br>p:last-of-type  选择属于其父元素的最后 </p><p> 元素的每个 </p><p> 元素。<br>p:only-of-type  选择属于其父元素唯一的 </p><p> 元素的每个 </p><p> 元素。<br>p:only-child        选择属于其父元素的唯一子元素的每个 </p><p> 元素。<br>p:nth-child(2)  选择属于其父元素的第二个子元素的每个 </p><p> 元素。</p>
<p>:after          在元素之前添加内容,也可以用来做清除浮动。<br>:before         在元素之后添加内容<br>:enabled<br>:disabled       控制表单控件的禁用状态。<br>:checked        单选框或复选框被选中。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;举例：&lt;br&gt;p:first-of-type 选择属于其父元素的首个 &lt;/p&gt;&lt;p&gt; 元素的每个 &lt;/p&gt;&lt;p&gt; 元素。&lt;br&gt;p:last-of-type  选择属于其父元素的最后 &lt;/p&gt;&lt;p&gt; 元素的每个 &lt;/p&gt;&lt;p&gt; 元素。&lt;br&gt;p:only-of-type  
    
    </summary>
    
      <category term="面试题目" scheme="www.wangchengzou.cn/categories/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="html" scheme="www.wangchengzou.cn/tags/html/"/>
    
      <category term="css" scheme="www.wangchengzou.cn/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>CSS选择符有哪些？哪些属性可以继承</title>
    <link href="www.wangchengzou.cn/2017/07/22/CSS%E9%80%89%E6%8B%A9%E7%AC%A6%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F%E5%93%AA%E4%BA%9B%E5%B1%9E%E6%80%A7%E5%8F%AF%E4%BB%A5%E7%BB%A7%E6%89%BF/"/>
    <id>www.wangchengzou.cn/2017/07/22/CSS选择符有哪些？哪些属性可以继承/</id>
    <published>2017-07-22T15:48:26.000Z</published>
    <updated>2017-07-23T07:53:18.490Z</updated>
    
    <content type="html"><![CDATA[<p> 1.id选择器（ # myid）<br> 2.类选择器（.myclassname）<br> 3.标签选择器（div, h1, p）<br> 4.相邻选择器（h1 + p）<br> 5.子选择器（ul &gt; li）<br> 6.后代选择器（li a）<br> 7.通配符选择器（ * ）<br> 8.属性选择器（a[rel = “external”]）<br> 9.伪类选择器（a:hover, li:nth-child）</p>
<ul>
<li>可继承的样式： font-size font-family color, UL LI DL DD DT;</li>
<li>不可继承的样式：border padding margin width height ;</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 1.id选择器（ # myid）&lt;br&gt; 2.类选择器（.myclassname）&lt;br&gt; 3.标签选择器（div, h1, p）&lt;br&gt; 4.相邻选择器（h1 + p）&lt;br&gt; 5.子选择器（ul &amp;gt; li）&lt;br&gt; 6.后代选择器（li a）&lt;br&gt; 7.通配符
    
    </summary>
    
      <category term="面试题目" scheme="www.wangchengzou.cn/categories/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="html" scheme="www.wangchengzou.cn/tags/html/"/>
    
      <category term="css" scheme="www.wangchengzou.cn/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>html知识点</title>
    <link href="www.wangchengzou.cn/2017/07/22/HTML%E7%AC%94%E8%AE%B0/"/>
    <id>www.wangchengzou.cn/2017/07/22/HTML笔记/</id>
    <published>2017-07-22T15:48:26.000Z</published>
    <updated>2017-07-23T09:45:30.273Z</updated>
    
    <content type="html"><![CDATA[<p>DAY01<br>    赵旭  zhaoxu@tedu.cn</p>
<p>1、WEB前端<br>    WEB前端 : Web Front-End<br>    WEB : 网页<br>    需求：<br>        1、HTML/CSS/Javascript<br>        2、各种框架<br>            jQuery<br>            AngularJS<br>            Bootstrap<br>            zepto<br>            Vue<br>            React<br>            … …<br>2、学习方法<br>    1、英文<br>        背<br>    2、练<br>        敲代码<br>    3、打字<br>3、课程体系<br>    1、阶段一 ：基础<br>        1、HTML5Basic<br>        2、CSS3Basic<br>        3、PROJECT1 - JD Index<br>        4、CSS3Core<br>        5、PROJECT2 - JD Details<br>        6、Bootstrap 框架<br>    2、阶段二 ：Javascript(JS)<br>    3、阶段三 ：高级<br>    4、阶段四 ：框架</p>
<p>1、HTML5Basic (3天)</p>
<hr>
<p>1、Web基础知识<br>    1、Internet<br>        1、简介<br>            Internet 实际上就是由计算机所组成的网络结构</p>
<pre><code>        服务：
            1、Telnet
                远程登录
            2、Email
                电子邮件
            3、WWW
                万维网服务，World Wide Web
            4、BBS
                电子公告板 (论坛)
                百度贴吧，天涯论坛，... ...
                CSDN ... ...
            5、FTP
                文件传输协议

        基本实现技术：
            1、分组交换原理
                将传递的数据 拆分成若干数据包
            2、TCP/IP协议
2、Web
    Web ：运行在Internet上的最流行的应用
        WWW : World Wide Web
        W3C : World Wide Web Consortium(万维网联盟)

        将 各类信息 以及 服务 进行无缝连接：
            信息：文字，图像，音频，视频，文件
            服务：BBS，Telnet，Email
3、Web的工作原理
    WEB是 基于 浏览器 / 服务器 模式的程序(B/S)
        B : Browser 浏览器
        S : Server 服务器

    基于 客户端 / 服务器 模式的程序(C/S)
        C : Client 客户端
        S : Server 服务器
        必须通过指定的客户端才能访问服务器数据的一种模式
    由Web服务器，浏览器 以及 通信协议 来组成
        服务器：提供服务的机器
        浏览器：工具
        通信协议：web中使用的时http通信协议
            http: Hyper Text Transfer Protocol
                    超级  文本 传输     协议
            规范了
                数据是如何打包的
                数据是如何传递的
    1、Web服务器
        功能：
            1、存储Web上内容信息
            2、接收客户端请求，并给出响应
            3、具备一定的安全功能
        产品：
            1、Tomcat
            2、Apache
            3、IIS
            ... ...
    2、WEB浏览器
        功能:
            1、代替用户提交请求(User Agent)
            2、作为HTML/CSS/Javascript 的解析器
            3、以图像化的方式显示网页文档
        产品:
            1、Microsoft IE
            2、Mozilla FireFox
            3、Google Chrome
            4、Apple Safari
            5、Opera
4、Web相关技术
    1、服务器端技术
        运行于服务器端，具备访问数据库的能力

        1、PHP
        2、JSP
        3、ASP
        4、ASP.NET
        5、Python
        6、NodeJS
    2、浏览器端技术(客户端)
        运行在客户端，由浏览器负责解释
        1、HTML
        2、CSS
        3、JavaScript(JS)
</code></pre><p>2、HTML入门<br>    1、HTML概述<br>        Web : 一种应用<br>        HTML是开发Web网页程序的一种语言</p>
<pre><code>    1、什么是HTML
        HTML：Hyper Text Markup Language
                  超级  文本 标签   语言
            超级文本：具备超能力的文本
                字符 a ：首字符
                超文本 a ：链接
            标签/标记：超文本的组成形式
            语言：具备不同的语法规范
        由HTML编写的文本最终是以 .html 或 .htm作为结尾的文件 , 并且由浏览器解释运行
2、HTML语法规范(重点)
    1、标记
        在HTML中，用于描述功能的符号称之为 &quot;标记&quot;

        语法：
            标记在书写时，必须用 尖括号 括起来(&lt;&gt;)
            标记分成 封闭类型的标记 和 非封闭类型的标记
            1、封闭类型标记
                必须成对出现
                &lt;标记&gt; 内容 &lt;/标记&gt;
                注意：
                    1、封闭类型标记必须成对出现
                    2、标记必须要完整,否则会有意想不到的效果

            2、非封闭类型标记
                又称为 单标记 或 空标记
                &lt;标记&gt; 或 &lt;标记/&gt;
                ex :
                    &lt;br&gt; : 换行
                    &lt;hr/&gt;: 水平线
    2、元素
        元素 即 标记
        ex:
            &lt;a&gt;百度&lt;/a&gt;

        1、元素的嵌套
            元素之间可以相互嵌套，形成更为复杂的页面结构
            语法：
                &lt;标记&gt;&lt;标记1&gt;&lt;/标记1&gt;&lt;/标记&gt;
            注意：
                1、注意嵌套顺序
                2、必须完整嵌套
                3、格式问题
                    被嵌套的内容要通过缩进(Tab)表示层级关系
                ex:
                    &lt;a&gt;&lt;b&gt;&lt;span&gt;&lt;i&gt;&lt;u&gt;Hello World&lt;/u&gt;&lt;/i&gt;&lt;/span&gt;&lt;/b&gt;&lt;/a&gt;
                    推荐的格式：
                    &lt;a&gt;
                        &lt;b&gt;
                            &lt;span&gt;
                                &lt;i&gt;
                                    &lt;u&gt;
                                        Hello World
                                    &lt;/u&gt;
                                &lt;/i&gt;
                            &lt;/span&gt;
                        &lt;/b&gt;
                    &lt;/a&gt;
        2、属性 和 值
            属性 是用来修饰 元素的
            语法：
                1、属性的声明必须位于开始标记中
                2、属性名称与标记名称之间用空格隔开
                    &lt;标记 属性&gt;&lt;/标记&gt;
                    &lt;标记 属性/&gt;
                3、属性值 与 属性之间 用 &quot;=&quot; 来连接
                     属性值要用 &quot;&quot; 或 &apos;&apos; 引起来
                    &lt;标记 属性=&quot;值&quot;&gt;
                4、一个元素允许有多属性，多属性之间排名不分先后，中间用 空格 隔开
                    &lt;标记 属性1=&quot;值&quot; 属性2=&quot;值&quot;&gt;

                    ex:
                        &lt;p align=&quot;center&quot; id=&quot;p1&quot;&gt;&lt;/p&gt;

            通用属性：大部分元素都会具备的属性
                1、id
                    定义元素在页面中独一无二的名称
                2、title
                    鼠标移入到元素上时所提示的信息
                3、class
                    指定元素所引用的类选择器(CSS中使用)
                4、style
                    定义元素的内联样式(css中使用)
    3、注释
        要编写在源文档中，但不想被浏览器解释运行的内容
        &lt;!--  注释  --&gt;
        注意：
            1、注释不能嵌套
                &lt;!--
                    这是一段注释
                    &lt;!--
                        这是另一段注释
                    --&gt;
                --&gt;
                以上结构是错的
            2、注释不能出现在标记(&lt;&gt;)里
                &lt;a &lt;!-- 这是一个a --&gt;&gt;&lt;/a&gt;
                以上的写法是错误的
3、文档结构
    1、两部分组成
        1、文档类型声明
            指定当前html文档用的时哪个版本
            语法：
                文档中的第一句话位置处
                &lt;!doctype html&gt;
        2、html页面
            网页要表示的信息的开始与结束
            语法：
                &lt;html&gt;&lt;/html&gt;
                属性：
                    1、lang
                        取值：zh-cn
            子级内容：
                1、网页头部信息
                    作用：用于定义网页的全局信息
                    语法：
                        &lt;head&gt;&lt;/head&gt;
                    子级：
                        1、网页标题
                            &lt;title&gt;标题内容&lt;/title&gt;
                        2、网页元数据
                            指定网页编码格式
                            &lt;meta charset=&quot;utf-8&quot;&gt;
                            注意：
                                必须保证网页文档的编码格式也是 utf-8 的

                2、网页主体信息
                    包含要显示给用户去看的所有内容
                    &lt;body&gt;&lt;/body&gt;
                    属性：
                        1、text
                            作用：控制当前文档的文本颜色
                            取值：颜色的英文表示方式
                        2、bgcolor
                            作用：控制当前文档的背景颜色
                            取值：同上
</code></pre><p>3、文本<br>    1、作用<br>        以不同的形式展现文字<br>    2、特殊字符<br>        默认下，任意多个 回车 和 空格 最后都会被折叠成一个空格<br>        通过转义字符表示特殊字符：<br>        1、&nbsp;<br>            一个空格<br>        2、&gt;<br>            &gt;<br>        3、&lt;<br>            &lt;<br>        4、&copy;<br>            ©<br>        5、&yen;<br>            ￥<br>    3、文本标记<br>        1、文本样式<br>            <i>内容</i> 斜体显示文本<br>            <u>内容</u> 下划线的文本<br>            <s>内容</s> 删除线的文本<br>            <b>内容</b> 加粗显示文本<br>            <sub></sub> 下标<br>            <sup></sup> 上标</p>
<pre><code>    特点：
        所有的内容会在一行内显示
2、标题元素
    作用：以标题的方式显示文本(突出显示)
    语法：
        &lt;hn&gt;&lt;/hn&gt;
            n : 1~6
            &lt;h1&gt;&lt;/h1&gt;
            ...
            &lt;h6&gt;&lt;/h6&gt;
    属性：
        1、align ：文本的水平排列方式
            取值：left / center / right
    特点：
        1、独自成行
        2、加粗显示文本
        3、上下会有垂直的空白
3、段落元素
    语法：
        &lt;p&gt;&lt;/p&gt;
    属性：
        align
    特点：
        1、垂直空白
        2、独占一行
4、换行元素
    语法：&lt;br&gt; 或 &lt;br/&gt;
5、分割线元素
    语法：&lt;hr&gt; 或 &lt;hr/&gt;
    属性：
        1、size
            尺寸，以px或%为单位(省略单位的话是px)
        2、width
            宽度，以px或%为单位
        3、align
            水平对齐方式
        4、color
            颜色
6、行分区元素
    语法：&lt;span&gt;&lt;/span&gt;
    作用：包裹文本并且设置不同的样式
7、块分区元素
    语法：&lt;div&gt;&lt;/div&gt;
    作用：布局
8、预格式化
    作用：保留标记内的格式(回车 和 空格)
    语法：&lt;pre&gt;&lt;/pre&gt;
9、块级元素和行内元素
    1、块级元素
        每一个块级元素独占一行
        块级元素的主要作用：布局
    2、行内元素
        多个元素会在一行内显示，显示不下自动换行
        span,i,b,s,u,sub,sup
        作用：设置文本样式
</code></pre><p>DAY02<br>  图像和链接<br>    URL 表示地址<br>        目录    WEB站点中保存文件的文件夹<br>        目录结构<br>        URL:Uniform Resource Locator 即统一资源定位器，俗称路径<br>                                     是描述资源文件位置的信息<br>            a.html 中想使用 b.html<br>            a.html 当前文件<br>            b.html 资源文件<br>        URL：表达三种方式<br>                绝对路径：从资源文件所在的最高级目录下开始的完整路径表示<br>                            获取网络资源文件《只能是绝对路径》<br>                                由通信协议“http/https”、主机名(域名、IP地址)、目录路径、文件名组成<br>                            获取本机资源文件<br>                                从盘符开始到资源文件名结尾<br>                相对路径：从当前文件位置处开始开始，去查找资源文件所经过的路径<br>                根相对路径  从WEB站点所在的服务器根目录上开始查找的<br>                            以/作为开始<br>    图像  语法<br>          标记：<img>或<img><br>          属性：src(全称：source 源)<br>                <img src="ur1"><br>                <img src="a.jpg"><br>                <img src="images/a.jpg"><br>                注意：URL严格区分大小写<br>                width<br>                height<br>                注意：如果width 和height只设置其中一个属性的话，那么另外一个将等比缩放<br>    链接 （超链接）<br>            语法：由<a>内容</a><br>                  注意：默认情况下，A是不能被点击的<br>            属性：href 链接的URL 只有设置href属性后，才允许被点击<br>                  target  目标，打开新网页的方式<br>                          取值：_self 默认值，在自身标签页中，打开新网页<br>                                _blank 在新标签页中，打开新网页<br>            链接表现形式： 资源下载<br>                            链接地址为<strong>.zip/</strong>.rar<br>                           电子邮件链接 <a href="mailto:zhaoxu@tedu.cn" target="_blank" rel="external">发送邮件</a><br>                           返回页面顶部的空链接<a href="#">返回顶部</a><br>                           链接到Javascript <a href="javascript:js代码" target="_blank" rel="external"></a><br>            锚点：anchor   在html文档的某行位置做一个记号，允许通过超链接跳转到该记号位置<br>                    定义锚点（做记号）<br>                        通过A标记的name属性 <a name="名称"></a><br>                        通过任意标记的ID属性&lt;标记 ID=”标记名称”&gt;&lt;/标记&gt;<br>                    链接到锚点（跳转到锚点）<a href="#锚点名称"></a><br>                                            <a href="页面URL#锚点名称"></a></p>
<pre><code>表格:表格的作用
        表格，是由一些称为单元格的东西按照从左到右，从上到下的顺序排列而成的
        语法：&lt;table&gt;&lt;/table&gt;  定义表格
              &lt;tr&gt;&lt;/tr&gt;        定义表行
              &lt;td&gt;&lt;/td&gt;           定义单元格
             尽量保证默认情况下，每行中的单元格数量是相同的
        表格属性：width   宽度
              height  高度
              align   对齐方式
              border  边框
              cellpadding  设置单元格内边距
              cellspacing  设置单元格外边距
              bgcolor  背景颜色
        表行属性：align   水平对齐
                  valign  取值top/middle/bottom    垂直对齐方法
                  bgcolor 背景颜色
              单元格属性：align
                  valign
                  width
                  height
                  bgcolor
                  colspan    设置单元格跨列
                  rowspan    设置单元格跨行
        单元格特点
                某一行单元格的高度，以最高的单元格高度为准
                某一列单元格的宽度，以最宽的单元格宽度为主
    table的子元素：表格标题&lt;caption&gt;标题文本&lt;/caption&gt;
                    注意：一个表格最多只能有一个标题
                         caption 必须位于&lt;table&gt;下的第一句话
                   td允许被 th替换  加粗。居中
    表格的复杂应用：行分组 表头行分组 &lt;thead&gt;&lt;/thead&gt; 允许包含一行或多行tr
                           表主体行分组&lt;tbody&gt;&lt;/tbody&gt; 允许包含任意多的连续tr
                           表尾行分组&lt;tfoot&gt;&lt;/tfoot&gt; 允许包含一行或多行tr
                        注意：如果不对table中的数据进行显示分组的话，默认都在tbody中
                    不规则表格  通td的 colspan和 rowspan属性来完成
                                colspan 跨列，在一行中，从指定单元格位置处开始，横向向右合并几个单元格
                                        被合并的单元格，要删除
                                rowspan 跨行。在一列中，从指定单元格位置处开始，纵向向下合并几个单元格
                                        被合并的单元格，要删除
                    表格的嵌套  允许在单元格中在放入一个表格
                                &lt;table&gt;
                                    &lt;tr&gt;
                                        &lt;td&gt;
                                            &lt;table&gt;
                                                &lt;tr&gt;
                                                    &lt;td&gt;
                                                    &lt;/td&gt;
                                                &lt;/tr&gt;
                                            &lt;/table&gt;
                                        &lt;/td&gt;
                                    &lt;/tr&gt;
                                &lt;/table&gt;
</code></pre><p>  列表<br>        列表语法<br>            组成  列表的类型：有序列表：<ol></ol><br>                              无序列表：<ul></ul><br>                     列 表项：显示在列表中的内容 <li></li><br>            属性  有序列表（ol）的属性 type 取值 1   a   A   i   I<br>                                       start  起始编号是多少 具体为数字<br>                  无序列表（ul）的属性 type 取值 disc 实心圆点<br>                                                 circle 空心圆<br>                                                 none 不显示标识<br>                                                 square  方块<br>        列表的嵌套： 允许在一个列表中出现另一个列表被嵌套的列表必须放在<li>中<br>        定义列表：作用，往往用于给出一类事物的定义情形，如名词解释<br>                  语法，<dl></dl>  表示定义列表<br>                            <dt></dt> 定义列表中标题<br>                            <dd></dd> 对标题解释说明的内容<br>                使用场合：图文混排时使用</li></p>
<p>DAY03<br>      结构标记<br>            网页结构布局：为了取代做布局的Div，从而体现出布局标记的语义性<br>                块级元素做布局，Div<br>                常用结构标记  header 用来表示页面或某部分内容的顶部信息<br>                                <header></header><br>                              nav   用来表示页面的主导航信息<br>                                  <nav></nav><br>                              section  表示页面中的小节，也可以用来表示页面的主体内容<br>                                    <section></section><br>                              article  表示页面中的文章信息或是文字居多的部分，比如博客信息，微博的条目，论坛中的主贴和回帖<br>                                    <article></article><br>                              footer   表示页面中底部信息，一般用户关注度较低<br>                                      <footer></footer><br>                              aside  表示页面中的边档信息<br>                                    <aside></aside></p>
<pre><code>&lt;h1&gt;表单&lt;/h1&gt;
    表单概述：表单用于显示，收集用户信息，并提交给服务器
        完整表单由两部分组成：实现表单以及可交互的界面元素（前端）
                                    表单元素：用于定义表单的提交信息如：提交地址，提交方式<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">表单控件：能够与用户交互的界面无素如：文本框，密码框~</div></pre></td></tr></table></figure>

                              表单提交后的处理（服务器端）
        表单元素：语法 &lt;form&gt;&lt;/form&gt;
                        注意：只有出现在form中的表单控件的数据才会被提交
                              form在页面中没有显示效果，只有功能
                  属性：action :指定提交给服务器处理程序的地址，该地址要与服务器端人员商量
                                注意：如果省略不写，默认提交给本页
                        method ：指定提交数据的方法（模式）
                                取值：get 获取（默认方式）
                                            以明文的方式提交数据到服务器（数据会显示在地址栏上），安全性低
                                            最大提交2KB数据
                                            向服务器要数据时用get方式
                                      post  邮寄
                                            以隐式的方式提交数据到服务器不会显示，安全性高
                                            无提交数据大小限制
                                            让服务器处理数据时使用post
                                      put
                                      delete
                        enctype ：指定表单数据的编码方式（什么样的数据允许提交）
                                  取值：application/x-www-form-urlencoded
                                             默认值，可以将所有的数据提交给服务器（文件除外）
                                        multipart/form-data
                                             允许将文件（图像，音频，视频，文档）提交给服务器
                                        text/plain
                                             允许将普通字符提交给服务器，特殊字符无法提交（=，&amp;，？）
                        name ：定义表单名称
                        id： 定义表达独一的标识
        表单控件：都是与用户进行交互的元素
                语法:input     收集用户信息
                        &lt;input&gt;  属性：type  根据不同的type值创建不同的输入控件
                                       name  定义控件的名称提供给服务器端使用，采用匈牙利命名法，控件缩写+功能
                                       value  定义控件的值，提供给服务器端使用
                                       disabled 禁用控件（无法操作，无法提交），该属性无值
                                说明：文本框和密码框
                                      文本框：type=“text”
                                      密码框：type=“password”
                                        属性：maxlength 限制输入的字符数，超出不显示
                                              readonly  只读（只能看，不能改，但允许被提交） 无值属性
                                              name 缩写txt+功能 如 name=“txtpassword”
                                      单选按钮和复选框
                                        单选按钮 ：type=“‘radio’”   radio缩写rdo
                                        复选框 ：type=“checkbox”    checkbox缩写chk
                                          属性：：name 定义控件的名称
                                                        为控件分组
                                                  value 值
                                                  checked 预选中
                                        按钮：提交按钮
                                                type=“submit” 必须放入表单中进行

                                              重置按钮
                                                type=“reset”
                                              普通按钮
                                                type=“button”
                                            属性：name  缩写btn
                                                  value  按钮上的文字
                                      其它按钮：图片按钮
                                                    &lt;input type=&quot;image&quot;&gt;
                                                    属性：src
                                                按钮《提交》可以放图
                                                &lt;button&gt;内容&lt;/button&gt;
                                      隐藏域和文件选择框
                                                隐藏域：type=“hidden”  想提交给服务器，但不想被用户看见的数据放在隐藏域中
                                                    属性：name
                                                          value
                                                文件选择框：type=“file”
                                                        注意，要求form的methods属性必须为post
                                                              form的enctype属性为multipart/form-data
                     textarea  多行文本域 允许 录入多行数据
                            语法：&lt;textarea&gt;&lt;/textarea&gt;
                            属性：name缩写 txt
                                  cols  指定文本区域列数
                                  rows  指定文本区域行数
                                  readonly  只读
                     select  选择框下拉框
                            语法：&lt;select&gt;&lt;/select&gt;
                                    属性 name 缩写sel
                                         size 默认显示的数量，如果大于1的话，则为滚动列表
                                         multiple 设置多选，同时变以滚动列表配合ctrl或shift实现多选
                                  选项
                     option       &lt;option&gt;/&lt;option&gt;
                                     属性  value 值
                                          selected 默认预选中，无值
                其它
                    label  关联文本与控件
                            &lt;label&gt;&lt;/label&gt;
                            属性  for 表示与该元素关联的控件的ID值
                    控件分组控件
                           &lt;fieldset&gt;&lt;/fieldset&gt;  分组
                           &lt;legend&gt;&lt;/legend&gt;    分组标题
                    浮动框架
                            可以在一个浏览器窗口中同时显示多个页面文档的内容，在一个页面中引入另一个页面
                            语法  &lt;iframe&gt;文字&lt;/iframe&gt;
                            属性 src 浮动框架中要引入的页面URL
                                 width
                                 height
                                 frameborder 浮动框架边框 默认有边框，无需边框设置为0
</code></pre><p>新表单元素（HTML5新标记）<br>    统一属性：name缩写txt<br>        required  非空限制，必须填入内容<br>    电子邮件类型：<input type="email"> 缩写txt<br>    搜索类型：<input type="search"><br>    URL类型：<input type="url">  数据必须符合URL规范<br>    电话号码类型：<input type="tel">    移动终端：弹出数字键盘<br>    数字类型：<input type="number"><br>        属性：min 控件接受的最小值<br>            max 控件接受的最大值<br>            step 控件递增的步长，默认为1<br>    范围类型：允许选择指定范围内的一个值（左右滑块类型）<br>        <input type="range"><br>        属性：min 指定范围最小值<br>            max 指定范围最大值<br>            step 指定值变化步长<br>            value 设置初始值<br>    颜色类型：颜色拾取控件<br>            <input type="color"><br>    日期类型：允许用户选择日期<br>            <input type="date"><br>    周类型：与date类似，但只能选择周<br>            <input type="week"><br>    月类型：与date类似，但只能选择月份<br>            <input type="month"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;DAY01&lt;br&gt;    赵旭  zhaoxu@tedu.cn&lt;/p&gt;
&lt;p&gt;1、WEB前端&lt;br&gt;    WEB前端 : Web Front-End&lt;br&gt;    WEB : 网页&lt;br&gt;    需求：&lt;br&gt;        1、HTML/CSS/Javascript&lt;b
    
    </summary>
    
      <category term="学习笔记" scheme="www.wangchengzou.cn/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="www.wangchengzou.cn/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>HTML5的form如何关闭自动完成功能</title>
    <link href="www.wangchengzou.cn/2017/07/22/HTML5%E7%9A%84form%E5%A6%82%E4%BD%95%E5%85%B3%E9%97%AD%E8%87%AA%E5%8A%A8%E5%AE%8C%E6%88%90%E5%8A%9F%E8%83%BD/"/>
    <id>www.wangchengzou.cn/2017/07/22/HTML5的form如何关闭自动完成功能/</id>
    <published>2017-07-22T15:48:26.000Z</published>
    <updated>2017-07-23T07:45:05.164Z</updated>
    
    <content type="html"><![CDATA[<p>给不想要提示的 form 或某个 input 设置为 autocomplete=off</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;给不想要提示的 form 或某个 input 设置为 autocomplete=off&lt;/p&gt;

    
    </summary>
    
      <category term="面试题目" scheme="www.wangchengzou.cn/categories/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="html" scheme="www.wangchengzou.cn/tags/html/"/>
    
      <category term="H5" scheme="www.wangchengzou.cn/tags/H5/"/>
    
  </entry>
  
  <entry>
    <title>JSON 的了解</title>
    <link href="www.wangchengzou.cn/2017/07/22/JSON%20%E7%9A%84%E4%BA%86%E8%A7%A3/"/>
    <id>www.wangchengzou.cn/2017/07/22/JSON 的了解/</id>
    <published>2017-07-22T15:48:26.000Z</published>
    <updated>2017-07-23T08:39:00.433Z</updated>
    
    <content type="html"><![CDATA[<p>JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。它是基于JavaScript的一个子集。数据格式简单, 易于读写, 占用带宽小如：{“age”:”12”, “name”:”back”}<br>JSON字符串转换为JSON对象:<br>var obj =eval(‘(‘+ str +’)’);<br>var obj = str.parseJSON();<br>var obj = JSON.parse(str);</p>
<p>JSON对象转换为JSON字符串：<br>var last=obj.toJSONString();<br>var last=JSON.stringify(obj);</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。它是基于JavaScript的一个子集。数据格式简单, 易于读写, 占用带宽小如：{“age”:”12”, “name”:”back”}&lt;br&gt;JSON字符串转换为JSON对象:&lt;
    
    </summary>
    
      <category term="面试题目" scheme="www.wangchengzou.cn/categories/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="javaScript" scheme="www.wangchengzou.cn/tags/javaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript原型，原型链，有什么特点</title>
    <link href="www.wangchengzou.cn/2017/07/22/JavaScript%E5%8E%9F%E5%9E%8B%EF%BC%8C%E5%8E%9F%E5%9E%8B%E9%93%BE%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E7%89%B9%E7%82%B9/"/>
    <id>www.wangchengzou.cn/2017/07/22/JavaScript原型，原型链，有什么特点/</id>
    <published>2017-07-22T15:48:26.000Z</published>
    <updated>2017-07-23T08:22:28.232Z</updated>
    
    <content type="html"><![CDATA[<p>每个对象都会在其内部初始化一个属性，就是prototype(原型)，当我们访问一个对象的属性时，如果这个对象内部不存在这个属性，那么他就会去prototype里找这个属性，这个prototype又会有自己的prototype，于是就这样一直找下去，也就是我们平时所说的原型链的概念。<br>关系：instance.constructor.prototype = instance.<strong>proto</strong><br>特点：JavaScript对象是通过引用来传递的，我们创建的每个新对象实体中并没有一份属于自己的原型副本。当我们修改原型时，与之相关的对象也会继承这一改变。<br>当我们需要一个属性的时，Javascript引擎会先看当前对象中是否有这个属性， 如果没有的话，  就会查找他的Prototype对象是否有这个属性，如此递推下去，一直检索到 Object 内建对象。<br> function Func(){}<br> Func.prototype.name = “Sean”;<br> Func.prototype.getInfo = function() {return this.name;}<br> var person = new Func();//现在可以参考var person = Object.create(oldObject);<br> console.log(person.getInfo());//它拥有了Func的属性和方法<br> //“Sean”<br> console.log(Func.prototype);<br> // Func { name=”Sean”, getInfo=function()}</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;每个对象都会在其内部初始化一个属性，就是prototype(原型)，当我们访问一个对象的属性时，如果这个对象内部不存在这个属性，那么他就会去prototype里找这个属性，这个prototype又会有自己的prototype，于是就这样一直找下去，也就是我们平时所说的原型链
    
    </summary>
    
      <category term="面试题目" scheme="www.wangchengzou.cn/categories/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="javaScript" scheme="www.wangchengzou.cn/tags/javaScript/"/>
    
  </entry>
  
  <entry>
    <title>Javascript作用链域?</title>
    <link href="www.wangchengzou.cn/2017/07/22/Javascript%E4%BD%9C%E7%94%A8%E9%93%BE%E5%9F%9F/"/>
    <id>www.wangchengzou.cn/2017/07/22/Javascript作用链域/</id>
    <published>2017-07-22T15:48:26.000Z</published>
    <updated>2017-07-23T08:27:58.046Z</updated>
    
    <content type="html"><![CDATA[<p>全局函数无法查看局部函数的内部细节，但局部函数可以查看其上层的函数细节，直至全局细节。<br>当需要从局部函数查找某一属性或方法时，如果当前作用域没有找到，就会上溯到上层作用域查找，直至全局函数，这种组织形式就是作用域链。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;全局函数无法查看局部函数的内部细节，但局部函数可以查看其上层的函数细节，直至全局细节。&lt;br&gt;当需要从局部函数查找某一属性或方法时，如果当前作用域没有找到，就会上溯到上层作用域查找，直至全局函数，这种组织形式就是作用域链。&lt;/p&gt;

    
    </summary>
    
      <category term="面试题目" scheme="www.wangchengzou.cn/categories/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="javaScript" scheme="www.wangchengzou.cn/tags/javaScript/"/>
    
  </entry>
  
  <entry>
    <title>Javascript如何实现继承</title>
    <link href="www.wangchengzou.cn/2017/07/22/Javascript%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%BB%A7%E6%89%BF/"/>
    <id>www.wangchengzou.cn/2017/07/22/Javascript如何实现继承/</id>
    <published>2017-07-22T15:48:26.000Z</published>
    <updated>2017-07-23T08:23:34.884Z</updated>
    
    <content type="html"><![CDATA[<p>1、构造继承<br>2、原型继承<br>3、实例继承<br>4、拷贝继承<br>原型prototype机制或apply和call方法去实现较简单，建议使用构造函数与原型混合方式。<br>function Parent(){  this.name = ‘wang’;   }<br>function Child(){   this.age = 28;    }<br>Child.prototype = new Parent();//继承了Parent，通过原型<br>var demo = new Child();<br>alert(demo.age);<br>alert(demo.name);//得到被继承的属性   }</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1、构造继承&lt;br&gt;2、原型继承&lt;br&gt;3、实例继承&lt;br&gt;4、拷贝继承&lt;br&gt;原型prototype机制或apply和call方法去实现较简单，建议使用构造函数与原型混合方式。&lt;br&gt;function Parent(){  this.name = ‘wang’;   }&lt;
    
    </summary>
    
      <category term="面试题目" scheme="www.wangchengzou.cn/categories/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="javaScript" scheme="www.wangchengzou.cn/tags/javaScript/"/>
    
  </entry>
  
  <entry>
    <title>Label的作用是什么？是怎么用的</title>
    <link href="www.wangchengzou.cn/2017/07/22/Label%E7%9A%84%E4%BD%9C%E7%94%A8%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F%E6%98%AF%E6%80%8E%E4%B9%88%E7%94%A8%E7%9A%84/"/>
    <id>www.wangchengzou.cn/2017/07/22/Label的作用是什么？是怎么用的/</id>
    <published>2017-07-22T15:48:26.000Z</published>
    <updated>2017-07-23T07:44:14.531Z</updated>
    
    <content type="html"><![CDATA[<p>label标签来定义表单控制间的关系,当用户选择该标签时，浏览器会自动将焦点转到和标签相关的表单控件上。</p>
<label for="Name">Number:</label><input type="“text“name="Name"" id="Name"><br><br><br><label>Date:<input type="text" name="B"></label>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;label标签来定义表单控制间的关系,当用户选择该标签时，浏览器会自动将焦点转到和标签相关的表单控件上。&lt;/p&gt;
&lt;label for=&quot;Name&quot;&gt;Number:&lt;/label&gt;&lt;input type=&quot;“text“name=&quot;Name&quot;&quot; id=&quot;Name&quot;&gt;&lt;br&gt;&lt;
    
    </summary>
    
      <category term="面试题目" scheme="www.wangchengzou.cn/categories/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="html" scheme="www.wangchengzou.cn/tags/html/"/>
    
      <category term="H5" scheme="www.wangchengzou.cn/tags/H5/"/>
    
  </entry>
  
  <entry>
    <title>谈谈This对象的理解</title>
    <link href="www.wangchengzou.cn/2017/07/22/This%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%90%86%E8%A7%A3/"/>
    <id>www.wangchengzou.cn/2017/07/22/This对象的理解/</id>
    <published>2017-07-22T15:48:26.000Z</published>
    <updated>2017-07-23T08:29:44.417Z</updated>
    
    <content type="html"><![CDATA[<p>this总是指向函数的直接调用者（而非间接调用者）；<br>如果有new关键字，this指向new出来的那个对象；<br>在事件中，this指向触发这个事件的对象，特殊的是，IE中的attachEvent中的this总是指向全局对象Window；</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;this总是指向函数的直接调用者（而非间接调用者）；&lt;br&gt;如果有new关键字，this指向new出来的那个对象；&lt;br&gt;在事件中，this指向触发这个事件的对象，特殊的是，IE中的attachEvent中的this总是指向全局对象Window；&lt;/p&gt;

    
    </summary>
    
      <category term="面试题目" scheme="www.wangchengzou.cn/categories/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="javaScript" scheme="www.wangchengzou.cn/tags/javaScript/"/>
    
  </entry>
  
  <entry>
    <title>CSS3有哪些新特性</title>
    <link href="www.wangchengzou.cn/2017/07/22/css%E5%AE%9A%E4%B9%89%E7%9A%84%E6%9D%83%E9%87%8D/"/>
    <id>www.wangchengzou.cn/2017/07/22/css定义的权重/</id>
    <published>2017-07-22T15:48:26.000Z</published>
    <updated>2017-07-23T08:11:23.533Z</updated>
    
    <content type="html"><![CDATA[<p>以下是权重的规则：标签的权重为1，class的权重为10，id的权重为100，<br>以下例子是演示各种定义的权重值：<br>/<em>权重为1</em>/ div{}<br>/<em>权重为10</em>/.class1{}<br>/<em>权重为100</em>/#id1{}<br>/<em>权重为100+1=101</em>/#id1div{}<br>/<em>权重为10+1=11</em>/.class1 div{}<br>/<em>权重为10+10+1=21</em>/.class1 .class2 div{}<br>如果权重相同，则最后定义的样式会起作用，但是应该避免这种情况出现</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以下是权重的规则：标签的权重为1，class的权重为10，id的权重为100，&lt;br&gt;以下例子是演示各种定义的权重值：&lt;br&gt;/&lt;em&gt;权重为1&lt;/em&gt;/ div{}&lt;br&gt;/&lt;em&gt;权重为10&lt;/em&gt;/.class1{}&lt;br&gt;/&lt;em&gt;权重为100&lt;/em&gt;/#id
    
    </summary>
    
      <category term="面试题目" scheme="www.wangchengzou.cn/categories/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="html" scheme="www.wangchengzou.cn/tags/html/"/>
    
      <category term="css" scheme="www.wangchengzou.cn/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>call()和.apply() 的区别</title>
    <link href="www.wangchengzou.cn/2017/07/22/call()%20%E5%92%8C%20.apply()%20%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>www.wangchengzou.cn/2017/07/22/call() 和 .apply() 的区别/</id>
    <published>2017-07-22T15:48:26.000Z</published>
    <updated>2017-07-23T08:48:35.899Z</updated>
    
    <content type="html"><![CDATA[<p>例子中用 add 来替换 sub，add.call(sub,3,1) == add(3,1) ，所以运行结果为：alert(4);<br>注意：js 中的函数其实是对象，函数名是对 Function 对象的引用。<br>function add(a,b)     {         alert(a+b);     }<br>function sub(a,b)     {         alert(a-b);     }<br>add.call(sub,3,1);</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;例子中用 add 来替换 sub，add.call(sub,3,1) == add(3,1) ，所以运行结果为：alert(4);&lt;br&gt;注意：js 中的函数其实是对象，函数名是对 Function 对象的引用。&lt;br&gt;function add(a,b)     {    
    
    </summary>
    
      <category term="面试题目" scheme="www.wangchengzou.cn/categories/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="javaScript" scheme="www.wangchengzou.cn/tags/javaScript/"/>
    
  </entry>
  
  <entry>
    <title>CSS3新增伪类有那些</title>
    <link href="www.wangchengzou.cn/2017/07/22/display%E6%9C%89%E5%93%AA%E4%BA%9B%E5%80%BC%EF%BC%9F%E8%AF%B4%E6%98%8E%E4%BB%96%E4%BB%AC%E7%9A%84%E4%BD%9C%E7%94%A8/"/>
    <id>www.wangchengzou.cn/2017/07/22/display有哪些值？说明他们的作用/</id>
    <published>2017-07-22T15:48:26.000Z</published>
    <updated>2017-07-23T07:58:36.808Z</updated>
    
    <content type="html"><![CDATA[<p>举例：<br>  block         象块类型元素一样显示。<br>  none          缺省值。象行内元素类型一样显示。<br>  inline-block  象行内元素一样显示，但其内容象块类型元素一样显示。<br>  list-item     象块类型元素一样显示，并添加样式列表标记。<br>  table         此元素会作为块级表格来显示<br>  inherit       规定应该从父元素继承 display 属性的值</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;举例：&lt;br&gt;  block         象块类型元素一样显示。&lt;br&gt;  none          缺省值。象行内元素类型一样显示。&lt;br&gt;  inline-block  象行内元素一样显示，但其内容象块类型元素一样显示。&lt;br&gt;  list-item     象块
    
    </summary>
    
      <category term="面试题目" scheme="www.wangchengzou.cn/categories/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="html" scheme="www.wangchengzou.cn/tags/html/"/>
    
      <category term="css" scheme="www.wangchengzou.cn/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>documen.write和 innerHTML的区别?</title>
    <link href="www.wangchengzou.cn/2017/07/22/documen.write%E5%92%8C%20innerHTML%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>www.wangchengzou.cn/2017/07/22/documen.write和 innerHTML的区别/</id>
    <published>2017-07-22T15:48:26.000Z</published>
    <updated>2017-07-23T08:45:31.879Z</updated>
    
    <content type="html"><![CDATA[<p>document.write只能重绘整个页面  innerHTML可以重绘页面的一部分</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;document.write只能重绘整个页面  innerHTML可以重绘页面的一部分&lt;/p&gt;

    
    </summary>
    
      <category term="面试题目" scheme="www.wangchengzou.cn/categories/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="DOM BOM" scheme="www.wangchengzou.cn/tags/DOM-BOM/"/>
    
  </entry>
  
  <entry>
    <title>html5有哪些新特性、移除了那些元素</title>
    <link href="www.wangchengzou.cn/2017/07/22/html5%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B0%E7%89%B9%E6%80%A7%E3%80%81%E7%A7%BB%E9%99%A4%E4%BA%86%E9%82%A3%E4%BA%9B%E5%85%83%E7%B4%A0/"/>
    <id>www.wangchengzou.cn/2017/07/22/html5有哪些新特性、移除了那些元素/</id>
    <published>2017-07-22T15:48:26.000Z</published>
    <updated>2017-07-23T03:58:08.890Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>HTML5 现在已经不是 SGML 的子集，主要是关于图像，位置，存储，多任务等功能的增加。<br>绘画 canvas;<br>用于媒介回放的 video 和 audio 元素;<br>本地离线存储 localStorage 长期存储数据，浏览器关闭后数据不丢失;       sessionStorage 的数据在浏览器关闭后自动删除;<br>语意化更好的内容元素，比如 article、footer、header、nav、section;<br>表单控件，calendar、date、time、email、url、search;<br>新的技术webworker, websocket, Geolocation;</li>
</ul>
<p>移除的元素：纯表现的元素：basefont，big，center，font, s，strike，tt，u;<br>对可用性产生负面影响的元素：frame，frameset，noframes；</p>
<ul>
<li>支持HTML5新标签：<br>IE8/IE7/IE6支持通过document.createElement方法产生的标签，可以利用这一特性让这些浏览器支持HTML5新标签，浏览器支持新标签后，还需要添加标签默认的样式。<br>当然也可以直接使用成熟的框架、比如html5shim;<!--[if lt IE 9]>
<script> src="http://html5shim.googlecode.com/svn/trunk/html5.js"</script>
<![endif]-->
<ul>
<li>如何区分HTML5： DOCTYPE声明\新增的结构元素\功能元素</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;HTML5 现在已经不是 SGML 的子集，主要是关于图像，位置，存储，多任务等功能的增加。&lt;br&gt;绘画 canvas;&lt;br&gt;用于媒介回放的 video 和 audio 元素;&lt;br&gt;本地离线存储 localStorage 长期存储数据，浏览器关闭后数据不丢失
    
    </summary>
    
      <category term="面试题目" scheme="www.wangchengzou.cn/categories/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="html" scheme="www.wangchengzou.cn/tags/html/"/>
    
      <category term="H5" scheme="www.wangchengzou.cn/tags/H5/"/>
    
  </entry>
  
  <entry>
    <title>eval是做什么的</title>
    <link href="www.wangchengzou.cn/2017/07/22/eval%E6%98%AF%E5%81%9A%E4%BB%80%E4%B9%88%E7%9A%84/"/>
    <id>www.wangchengzou.cn/2017/07/22/eval是做什么的/</id>
    <published>2017-07-22T15:48:26.000Z</published>
    <updated>2017-07-23T08:30:14.993Z</updated>
    
    <content type="html"><![CDATA[<p>它的功能是把对应的字符串解析成JS代码并运行；应该避免使用eval，不安全，非常耗性能（2次，一次解析成js语句，一次执行）。<br>由JSON字符串转换为JSON对象的时候可以用eval，var obj =eval(‘(‘+ str +’)’);</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;它的功能是把对应的字符串解析成JS代码并运行；应该避免使用eval，不安全，非常耗性能（2次，一次解析成js语句，一次执行）。&lt;br&gt;由JSON字符串转换为JSON对象的时候可以用eval，var obj =eval(‘(‘+ str +’)’);&lt;/p&gt;

    
    </summary>
    
      <category term="面试题目" scheme="www.wangchengzou.cn/categories/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="javaScript" scheme="www.wangchengzou.cn/tags/javaScript/"/>
    
  </entry>
  
</feed>
